## variables
# AWS_ACCESS_KEY
# AWS_REGION
# AWS_SECRET_KEY

name: "Plan / Test on PR"
on:
  push:
    branches:
      - main
jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - name: Terraform Format
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

  plan:
    name: Plan
    env:
      TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2    
              
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false

      - name: Cat no arquivo criado 
        if: steps.plan.outcome != 'failure'
        run: |       
          cat ./secret.txt

  Destroy:
    name: Destroi
    env:
      TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
    runs-on: ubuntu-latest    
    
    steps:
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve 
